// <auto-generated />
using lanchonete.Data.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using System;

namespace lanchonete.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20180424134154_migrations")]
    partial class migrations
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.1-rtm-125");

            modelBuilder.Entity("lanchonete.Models.Cliente", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("EnderecoId");

                    b.Property<string>("Nome");

                    b.Property<int>("TelefoneId");

                    b.HasKey("Id");

                    b.HasIndex("EnderecoId");

                    b.HasIndex("TelefoneId");

                    b.ToTable("Clientes");
                });

            modelBuilder.Entity("lanchonete.Models.DetalhesPed", b =>
                {
                    b.Property<int>("PedidoId");

                    b.Property<int>("ProdutoId");

                    b.Property<int>("Quantidade");

                    b.Property<int>("id");

                    b.HasKey("PedidoId", "ProdutoId");

                    b.HasIndex("ProdutoId");

                    b.ToTable("Detalhes");
                });

            modelBuilder.Entity("lanchonete.Models.Endereco", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Cidade");

                    b.Property<string>("Estado");

                    b.Property<int>("Numero");

                    b.Property<string>("País");

                    b.Property<string>("Referencia");

                    b.Property<string>("Rua");

                    b.HasKey("Id");

                    b.ToTable("Enderecos");
                });

            modelBuilder.Entity("lanchonete.Models.Filial", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int?>("EnderecoId");

                    b.Property<int?>("TelefoneId");

                    b.HasKey("Id");

                    b.HasIndex("EnderecoId");

                    b.HasIndex("TelefoneId");

                    b.ToTable("Filials");
                });

            modelBuilder.Entity("lanchonete.Models.Fornecedor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Nome");

                    b.Property<int?>("endereçoId");

                    b.Property<int?>("telefoneId");

                    b.HasKey("Id");

                    b.HasIndex("endereçoId");

                    b.HasIndex("telefoneId");

                    b.ToTable("Fornecedores");
                });

            modelBuilder.Entity("lanchonete.Models.Funcionario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Cargo");

                    b.Property<int>("EndId");

                    b.Property<string>("Nome");

                    b.Property<int>("TelId");

                    b.Property<int?>("enderecoId");

                    b.Property<int?>("telefoneId");

                    b.HasKey("Id");

                    b.HasIndex("enderecoId");

                    b.HasIndex("telefoneId");

                    b.ToTable("Funcionarios");
                });

            modelBuilder.Entity("lanchonete.Models.Pedido", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("CliId");

                    b.Property<int?>("ClienteId");

                    b.Property<int>("FilId");

                    b.Property<int?>("FilialId");

                    b.Property<int>("FunId");

                    b.Property<int?>("FuncionarioId");

                    b.HasKey("Id");

                    b.HasIndex("ClienteId");

                    b.HasIndex("FilialId");

                    b.HasIndex("FuncionarioId");

                    b.ToTable("Pedidos");
                });

            modelBuilder.Entity("lanchonete.Models.Produto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Descricao");

                    b.Property<int>("FornecedorId");

                    b.Property<double>("Preco");

                    b.Property<string>("tipo");

                    b.HasKey("Id");

                    b.HasIndex("FornecedorId");

                    b.ToTable("Produtos");
                });

            modelBuilder.Entity("lanchonete.Models.Telefone", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("numero");

                    b.HasKey("Id");

                    b.ToTable("Telefones");
                });

            modelBuilder.Entity("lanchonete.Models.Cliente", b =>
                {
                    b.HasOne("lanchonete.Models.Endereco", "endereco")
                        .WithMany("clientes")
                        .HasForeignKey("EnderecoId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("lanchonete.Models.Telefone", "telefone")
                        .WithMany("clientes")
                        .HasForeignKey("TelefoneId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("lanchonete.Models.DetalhesPed", b =>
                {
                    b.HasOne("lanchonete.Models.Pedido", "Pedido")
                        .WithMany()
                        .HasForeignKey("PedidoId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("lanchonete.Models.Produto", "Produto")
                        .WithMany("Detalhes")
                        .HasForeignKey("ProdutoId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("lanchonete.Models.Filial", b =>
                {
                    b.HasOne("lanchonete.Models.Endereco", "Endereco")
                        .WithMany("Filials")
                        .HasForeignKey("EnderecoId");

                    b.HasOne("lanchonete.Models.Telefone", "Telefone")
                        .WithMany("Filials")
                        .HasForeignKey("TelefoneId");
                });

            modelBuilder.Entity("lanchonete.Models.Fornecedor", b =>
                {
                    b.HasOne("lanchonete.Models.Endereco", "endereço")
                        .WithMany("Fornecedores")
                        .HasForeignKey("endereçoId");

                    b.HasOne("lanchonete.Models.Telefone", "telefone")
                        .WithMany("Fornecedores")
                        .HasForeignKey("telefoneId");
                });

            modelBuilder.Entity("lanchonete.Models.Funcionario", b =>
                {
                    b.HasOne("lanchonete.Models.Endereco", "endereco")
                        .WithMany("Funcionarios")
                        .HasForeignKey("enderecoId");

                    b.HasOne("lanchonete.Models.Telefone", "telefone")
                        .WithMany("Funcionarios")
                        .HasForeignKey("telefoneId");
                });

            modelBuilder.Entity("lanchonete.Models.Pedido", b =>
                {
                    b.HasOne("lanchonete.Models.Cliente", "Cliente")
                        .WithMany("Pedidos")
                        .HasForeignKey("ClienteId");

                    b.HasOne("lanchonete.Models.Filial", "Filial")
                        .WithMany("Pedidos")
                        .HasForeignKey("FilialId");

                    b.HasOne("lanchonete.Models.Funcionario", "Funcionario")
                        .WithMany("Pedidos")
                        .HasForeignKey("FuncionarioId");
                });

            modelBuilder.Entity("lanchonete.Models.Produto", b =>
                {
                    b.HasOne("lanchonete.Models.Fornecedor", "Fornecedor")
                        .WithMany("Produtos")
                        .HasForeignKey("FornecedorId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
